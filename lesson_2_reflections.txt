What happens when you initialize a repository? Why do you need to do it?

    When a repository is initialised using the "git init" command the .git
    directory is created in the current working directory

    Existing files are not automatically committed to the repository

    The .git directory will contain all the repository meta-data

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The staging area contains files which have been marked for commit by the
    "git add" command

    These files are contained within the working directory.

    When the "git commit" command is run they will be added to repository
    contained in the ".git" directory

    The staging area provides a way of separating temporary files created during
    the development process from the more permanent project files

How can you use the staging area to make sure you have one commit per logical
change?

    The "git status" command will show files which have been modified but not
    yet staged for commit.

    Using the "git add" command it is possible to add the files related to a
    particular logical change to the staging area

    Then using the "git diff -staged" command it is possible to compare the
    changes made to the last commit.

    If these form a logical unit then it makes sense to run "git commit"
